{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/logo.js","src/js/hahowCustomControl.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","is","object","Object","number","Number","isNaN","string","String","boolean","function","Function","array","nullOrUndefined","Array","isArray","weakMap","WeakMap","nodeList","NodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","test","empty","length","keys","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","e","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","getFocusElement","focused","activeElement","body","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","range","browser","isIE","documentMode","isWebkit","documentElement","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","map","extend","player","configurable","set","_player$media","currentTime","paused","preload","readyState","pause","setImmediate","src","play","load","quality","cancelRequests","sources","config","blankVideo","debug","log","getDeep","path","reduce","obj","target","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","URL","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","classNames","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","createMenuItem","list","_ref$badge","_ref$checked","checked","radio","name","faux","insertAdjacentHTML","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this2","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","parseFloat","timeUpdate","invert","invertTime","seeking","durationUpdate","hasDuration","displayDuration","toggleTab","setting","tabs","setQualityMenu","_this3","panes","checkMenu","sort","a","b","sorting","getLabel","getBadge","updateSetting","pane","currentTrack","captionPosition","default","setCaptionsMenu","_this4","tracks","getTracks","toggled","language","unshift","bind","setCaptionsPositionMenu","_this5","position","setSpeedMenu","_this6","speed","isVimeo","values","some","tab","toggleMenu","form","show","isMenuItem","isButton","stopPropagation","getTabSize","clone","opacity","scrollWidth","height","scrollHeight","showTab","_this7","size","restore","propertyName","focus","create","_this8","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","tabindex","inner","home","back","inject","_this9","Math","floor","random","props","seektime","setTimeout","offsetHeight","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","hostname","protocol","blob","createObjectURL","languages","userLanguage","active","setPosition","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","customMenu","caption","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","setDefault","defaultLanguage","captionsActive","captionsLanguage","findLanguageList","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","logo","link","fullscreenContainer","loop","selected","keyboard","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","enterZoom","exitZoom","frameTitle","noCaptions","caption-position","captionPositionLabel","top","bottom","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","listeners","editable","layer","topLayer","bottomLayer","right","zoom","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","tabFocus","outerContainer","google","publisherId","providers","types","noop","Console","console","onChange","isZoom","zoomActive","isIosNative","isOutterContainerSet","first","last","keyCode","shiftKey","preventDefault","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","toggleZoom","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","addStylehookToFullscreenContainer","build","ready","checkPlaying","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","handleKey","firstTouch","code","which","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","delay","isAlreadyRegisterEventListener","hasAudio","initialized","managerPromise","proxyEvents","_event$detail","isAudio","ended","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","currentTarget","eventType","done","seekTo","_player","webkitDirectionInvertedFromDevice","direction","deltaY","deltaX","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","startsWith","posterSrc","format$$1","playerVars","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","prevType","prevProvider","_sources$","_sources$$provider","tagName","crossorigin","defaultCaption","defaultTracks","srclang","logoContainer","imageContainer","linkElement","logoElement","hahow","createControls","bottomLeft","bottomRight","Plyr","failed","jQuery","original","getProviderByUrl","searchParams","truthy","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","abs","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\n\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\n\nconst is = {\n    object(input) {\n        return getConstructor(input) === Object;\n    },\n    number(input) {\n        return getConstructor(input) === Number && !Number.isNaN(input);\n    },\n    string(input) {\n        return getConstructor(input) === String;\n    },\n    boolean(input) {\n        return getConstructor(input) === Boolean;\n    },\n    function(input) {\n        return getConstructor(input) === Function;\n    },\n    array(input) {\n        return !is.nullOrUndefined(input) && Array.isArray(input);\n    },\n    weakMap(input) {\n        return instanceOf(input, WeakMap);\n    },\n    nodeList(input) {\n        return instanceOf(input, NodeList);\n    },\n    element(input) {\n        return instanceOf(input, Element);\n    },\n    textNode(input) {\n        return getConstructor(input) === Text;\n    },\n    event(input) {\n        return instanceOf(input, Event);\n    },\n    cue(input) {\n        return instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\n    },\n    track(input) {\n        return instanceOf(input, TextTrack) || (!is.nullOrUndefined(input) && is.string(input.kind));\n    },\n    url(input) {\n        return (\n            !is.nullOrUndefined(input) &&\n            /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/.test(input)\n        );\n    },\n    nullOrUndefined(input) {\n        return input === null || typeof input === 'undefined';\n    },\n    empty(input) {\n        return (\n            is.nullOrUndefined(input) ||\n            ((is.string(input) || is.array(input) || is.nodeList(input)) && !input.length) ||\n            (is.object(input) && !Object.keys(input).length)\n        );\n    },\n};\n\nexport default is;\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    // Inject the new <element>\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hasAttribute('hidden');\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return null;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Get the focused element\nexport function getFocusElement() {\n    let focused = document.activeElement;\n\n    if (!focused || focused === document.body) {\n        focused = null;\n    } else {\n        focused = document.querySelector(':focus');\n    }\n\n    return focused;\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = getFocusElement();\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        toggleHidden(element, true);\n        element.offsetHeight; // eslint-disable-line\n        toggleHidden(element, false);\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            configurable: true,\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                player.pause();\n\n                setImmediate(() => {\n                    // Set new source\n                    player.media.src = source.getAttribute('src');\n\n                    // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                    if (preload !== 'none' || readyState) {\n                        // Restore time\n                        player.once('loadedmetadata', () => {\n                            if (player.currentTime === 0) {\n                                player.currentTime = currentTime;\n                            }\n\n                            // Resume playing\n                            if (!paused) {\n                                player.play();\n                            }\n                        });\n\n                        // Load new source\n                        player.media.load();\n                    }\n\n                    // Trigger change event\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: input,\n                    });\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const sources = html5.getSources.call(this);\n        if (sources && sources.length > 0) {\n            // set source to blank string to avoid memory leak\n            sources.forEach((source) => {\n                source.setAttribute('src', '');\n            });\n            this.media.load();\n        }\n        // Remove child sources\n        removeElement(sources);\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\nimport { replaceAll } from './utils/strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from './../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    getElement,\n    getElements,\n    hasClass,\n    removeElement,\n    setAttributes,\n    toggleClass,\n    toggleHidden,\n    matches,\n} from './utils/elements';\nimport { off, on } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'zoom':\n                toggle = true;\n                label = 'enterZoom';\n                labelPressed = 'exitZoom';\n                icon = 'enter-zoom';\n                iconPressed = 'exit-zoom';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        // Toggle classname when pressed property is set\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n            enumerable: true,\n            get() {\n                return hasClass(button, className);\n            },\n            set(pressed = false) {\n                toggleClass(button, className, pressed);\n            },\n        });\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `plyr__time ${attributes.class}`,\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const item = createElement('li');\n\n        const label = createElement('label', {\n            class: this.config.classNames.control,\n        });\n\n        const radio = createElement(\n            'input',\n            extend(getAttributesFromSelector(this.config.selectors.inputs[type]), {\n                type: 'radio',\n                name: `plyr-${type}`,\n                value,\n                checked,\n                class: 'plyr__sr-only',\n            }),\n        );\n\n        const faux = createElement('span', { hidden: '' });\n\n        label.appendChild(radio);\n        label.appendChild(faux);\n        label.insertAdjacentHTML('beforeend', title);\n\n        if (is.element(badge)) {\n            label.appendChild(badge);\n        }\n\n        item.appendChild(label);\n        list.appendChild(item);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleTab(setting, toggle) {\n        toggleHidden(this.elements.settings.tabs[setting], !toggle);\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            case 'caption-position':\n                return i18n.get(`captionPositionLabel.${value}`, this.config);\n\n            default:\n                return null;\n        }\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panes[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else if (setting === 'caption-position') {\n            value = this.captionPosition;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('ul');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.tabs[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`input[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panes.loop.querySelector('ul');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.tabs.loop, false);\n        toggleHidden(this.elements.settings.panes.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleTab.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, tracks.length);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!this.config.controls.includes('caption-position')) {\n            return;\n        }\n\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Do nothing if not selected\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\n            return;\n        }\n\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { tabs } = this.elements.settings;\n        const visible = !is.empty(tabs) && Object.values(tabs).some(tab => !tab.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { form } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(form) || !is.element(button)) {\n            return;\n        }\n\n        const show = is.boolean(event) ? event : is.element(form) && form.hasAttribute('hidden');\n\n        if (is.event(event)) {\n            const isMenuItem = is.element(form) && form.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        if (is.element(form)) {\n            toggleHidden(form, !show);\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                form.removeAttribute('tabindex');\n            } else {\n                form.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a tab\n    getTabSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Prevent input's being unchecked due to the name being identical\n        Array.from(clone.querySelectorAll('input[name]')).forEach(input => {\n            const name = input.getAttribute('name');\n            input.setAttribute('name', `${name}-clone`);\n        });\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Toggle Menu\n    showTab(target = '') {\n        const { menu } = this.elements.settings;\n        const pane = document.getElementById(target);\n\n        // Nothing to show, bail\n        if (!is.element(pane)) {\n            return;\n        }\n\n        // Are we targeting a tab? If not, bail\n        const isTab = pane.getAttribute('role') === 'tabpanel';\n        if (!isTab) {\n            return;\n        }\n\n        // Hide all other tabs\n        // Get other tabs\n        const current = menu.querySelector('[role=\"tabpanel\"]:not([hidden])');\n        const container = current.parentNode;\n\n        // Set other toggles to be expanded false\n        Array.from(menu.querySelectorAll(`[aria-controls=\"${current.getAttribute('id')}\"]`)).forEach(toggle => {\n            toggle.setAttribute('aria-expanded', false);\n        });\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getTabSize.call(this, pane);\n\n            // Restore auto height/width\n            const restore = e => {\n                // We're only bothered about height and width on the container\n                if (e.target !== container || !['width', 'height'].includes(e.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n        current.setAttribute('tabindex', -1);\n\n        // Set attributes on target\n        toggleHidden(pane, false);\n\n        const tabs = getElements.call(this, `[aria-controls=\"${target}\"]`);\n        Array.from(tabs).forEach(tab => {\n            tab.setAttribute('aria-expanded', true);\n        });\n        pane.removeAttribute('tabindex');\n\n        // Focus the first item\n        pane.querySelectorAll('button:not(:disabled), input:not(:disabled), [tabindex]')[0].focus();\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            volume.appendChild(\n                controls.createRange.call(\n                    this,\n                    'volume',\n                    extend(attributes, {\n                        id: `plyr-volume-${data.id}`,\n                    }),\n                ),\n            );\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const menu = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            menu.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const form = createElement('form', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tablist',\n                tabindex: -1,\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tabpanel',\n            });\n\n            // Create the tab list\n            const tabs = createElement('ul', {\n                role: 'tablist',\n            });\n\n            // Build the tabs\n            this.config.settings.forEach(type => {\n                const tab = createElement('li', {\n                    role: 'tab',\n                    hidden: '',\n                });\n\n                const button = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        id: `plyr-settings-${data.id}-${type}-tab`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-${type}`,\n                        'aria-expanded': false,\n                    }),\n                    i18n.get(type, this.config),\n                );\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                button.appendChild(value);\n                tab.appendChild(button);\n                tabs.appendChild(tab);\n\n                this.elements.settings.tabs[type] = tab;\n            });\n\n            home.appendChild(tabs);\n            inner.appendChild(home);\n\n            // Build the panes\n            this.config.settings.forEach(type => {\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                    'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                    role: 'tabpanel',\n                    tabindex: -1,\n                });\n\n                const back = createElement(\n                    'button',\n                    {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-home`,\n                        'aria-expanded': false,\n                    },\n                    i18n.get(type, this.config),\n                );\n\n                pane.appendChild(back);\n\n                const options = createElement('ul');\n\n                pane.appendChild(options);\n                inner.appendChild(pane);\n\n                this.elements.settings.panes[type] = pane;\n            });\n\n            form.appendChild(inner);\n            menu.appendChild(form);\n            container.appendChild(menu);\n\n            this.elements.settings.form = form;\n            this.elements.settings.menu = menu;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        if (this.config.controls.includes('zoom')) {\n            container.appendChild(controls.createButton.call(this, 'zoom'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n            if (is.element(container)) {\n                update = false;\n            }\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n    hasClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n                controls.setCaptionsPositionMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        let languageArray = (navigator.languages || navigator.userLanguage || []).map(language => language.split('-')[0]);\n        const languages = dedupe(languageArray);\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        captions.setPosition.call(this, this.captionPosition);\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // for custom control\n        if (is.string(this.config.controls) || is.function(this.config.controls)) {\n            if (this.config.customMenu && is.function(this.config.customMenu.caption)) {\n                this.config.customMenu.caption.call(this);\n            }\n        } else if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            // Update available languages in list\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle state\n            if (this.elements.buttons.captions && this.elements.buttons.captions.pressed) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            track.mode = 'showing';\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n\n    setPosition(position) {\n        // if already setup correct class name, just ignore\n        if (hasClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'))) {\n            if (position === 'top') return;\n        } else if (position === 'bottom') {\n            return;\n        }\n        toggleClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'));\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'caption-position');\n    },\n\n    setDefault(defaultLanguage = null) {\n        const captionsActive = this.storage.get('captions');\n        const captionsLanguage = this.storage.get('language') || defaultLanguage;\n        // if storage has caption active and,\n        if (\n            (is.boolean(captionsActive) && captionsActive && is.string(captionsLanguage)) ||\n            (!is.boolean(captionsActive) && is.string(captionsLanguage))\n        ) {\n            const tracks = captions.getTracks.call(this, true);\n            const findLanguageList = [captionsLanguage];\n            if (defaultLanguage) {\n                findLanguageList.push(defaultLanguage);\n            }\n            Array.prototype.push.apply(findLanguageList, this.captions.languages);\n            const track = captions.findTrack.call(this, findLanguageList, true);\n            captions.set.call(this, tracks.indexOf(track));\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    logo: {\n        url: undefined,\n        link: undefined,\n    },\n\n    // fullscreen container, default is plyr container\n    fullscreenContainer: undefined,\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        position: 'bottom',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'caption-position',\n        'settings',\n        'pip',\n        'airplay',\n        'zoom',\n        'fullscreen',\n    ],\n    settings: ['captions', 'caption-position', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        enterZoom: 'zoom',\n        exitZoom: 'reset screen size',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        noCaptions: 'No captions',\n        'caption-position': 'Caption Position',\n        'captionPositionLabel': {\n            top: 'Top',\n            bottom: 'Bottom',\n        },\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // custom control menu setup function\n    customMenu: {\n        caption: null,\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'enterzoomfullscreen',\n        'exitzoomfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n            layer: {\n                topLayer: '.plyr__controls-top',\n                bottomLayer: '.plyr__controls-bottom',\n            },\n            bottom: {\n                left: '.plyr__controls-bottom-left',\n                right: '.plyr__controls-bottom-right',\n            },\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            zoom: '[data-plyr=\"zoom\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            'caption-position': '[data-plyr=\"caption-position\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        logo: 'plyr--logo',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        captionPosition: 'plyr__caption_position__{0}',\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n        outerContainer: 'plyr__outer-container',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange(isZoom = false) {\n    if (!this.enabled) {\n        return;\n    }\n\n    if (!isZoom) {\n        // Update toggle button\n        const button = this.player.elements.buttons.fullscreen;\n        if (is.element(button)) {\n            button.pressed = this.active;\n        }\n    } else {\n        const button = this.player.elements.buttons.zoom;\n        if (is.element(button)) {\n            button.pressed = this.zoomActive;\n        }\n    }\n\n    // Trigger an event\n    if (this.isIosNative || !this.isOutterContainerSet) {\n        if (!isZoom) {\n            triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n        } else {\n            triggerEvent.call(this.player, this.target, this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen', true);\n        }\n    } else {\n        if (!isZoom) {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.active ? 'enterfullscreen' : 'exitfullscreen',\n                true,\n            );\n        } else {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen',\n                true,\n            );\n        }\n    }\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    if (this.target === this.player.elements.container) {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n    } else {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.fallback, toggle);\n    }\n\n\n    // Toggle button and fire events\n    onChange.call(this, true);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    get zoomActive() {\n        return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n    }\n\n    get isIosNative() {\n        return browser.isIos && this.player.config.fullscreen.iosNative;\n    }\n\n    get isOutterContainerSet() {\n        return !!this.player.config.fullscreenContainer;\n    }\n\n    // Get target element\n    get target() {\n        if (this.isIosNative) {\n            return this.player.media;\n        } else if (this.isOutterContainerSet) {\n            return this.player.config.fullscreenContainer;\n        }\n        return this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        if (this.zoomActive) {\n            this.toggleZoom();\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    toggleZoom() {\n        if (!this.zoomActive) {\n            toggleFallback.call(this, true);\n        } else {\n            toggleFallback.call(this, false);\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    addStylehookToFullscreenContainer () {\n        // append plyr__outer-container class name to outer container\n        if (this.config.fullscreenContainer) {\n            toggleClass(this.config.fullscreenContainer, this.config.classNames.outerContainer, true);\n        }\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            this.ready = true;\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport browser from './utils/browser';\nimport { getElement, getElements, getFocusElement, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [27, 32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = getFocusElement();\n            if (\n                is.element(focused) &&\n                (focused !== this.player.elements.inputs.seek &&\n                    matches(focused, this.player.config.selectors.editable))\n            ) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 27:\n                    // esc escape fullscreen mode\n                    if (this.player.fullscreen.enabled) {\n                        this.player.fullscreen.exit();\n                    }\n                    break;\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            toggleListener.call(this.player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(this.player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(this.player, document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            on.call(this.player, this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        on.call(this.player, this.player.elements.container, 'focusout', event => {\n            toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n        // Add classname to tabbed elements\n        on.call(this.player, this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                toggleClass(getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            this.player,\n            this.player.elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = this.player.elements;\n\n                // Remove button states for fullscreen\n                if (event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(this.player, true);\n                    // Use longer timeout for touch devices\n                    delay = this.player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(this.player.timers.controls);\n                // Timer to prevent flicker when seeking\n                this.player.timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        if (!this.player.media.isAlreadyRegisterEventListener) {\n            this.player.media.isAlreadyRegisterEventListener = true;\n            // Time change on media\n            on.call(this.player, this.player.media, 'timeupdate seeking seeked', event =>\n                controls.timeUpdate.call(this.player, event),\n            );\n\n            // Display duration\n            on.call(this.player, this.player.media, 'durationchange loadeddata loadedmetadata', event =>\n                controls.durationUpdate.call(this.player, event),\n            );\n\n            // Check for audio tracks on load\n            // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n            on.call(this.player, this.player.media, 'canplay', () => {\n                toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n                toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n            });\n\n            // Handle the media finishing\n            on.call(this.player, this.player.media, 'ended', () => {\n                // Show poster on end\n                if (this.player.isHTML5 && this.player.isVideo && this.player.config.resetOnEnd) {\n                    // Restart\n                    this.player.restart();\n                }\n            });\n\n            // Check for buffer progress\n            on.call(this.player, this.player.media, 'progress playing seeking seeked', event =>\n                controls.updateProgress.call(this.player, event),\n            );\n\n            // Handle volume changes\n            on.call(this.player, this.player.media, 'volumechange', event =>\n                controls.updateVolume.call(this.player, event),\n            );\n\n            // Handle play/pause\n            on.call(this.player, this.player.media, 'playing play pause ended emptied timeupdate', event =>\n                ui.checkPlaying.call(this.player, event),\n            );\n\n            // Loading state\n            on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\n                ui.checkLoading.call(this.player, event),\n            );\n\n            // If autoplay, then load advertisement if required\n            // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n            on.call(this.player, this.player.media, 'playing', () => {\n                if (!this.player.ads) {\n                    return;\n                }\n\n                // If ads are enabled, wait for them first\n                if (this.player.ads.enabled && !this.player.ads.initialized) {\n                    // Wait for manager response\n                    this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n                }\n            });\n\n            // Volume change\n            on.call(this.player, this.player.media, 'volumechange', () => {\n                // Save to storage\n                this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n            });\n\n            // Speed change\n            on.call(this.player, this.player.media, 'ratechange', () => {\n                // Update UI\n                controls.updateSetting.call(this.player, 'speed');\n\n                // Save to storage\n                this.player.storage.set({ speed: this.player.speed });\n            });\n\n            // Quality change\n            on.call(this.player, this.player.media, 'qualitychange', event => {\n                // Update UI\n                controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n            });\n\n            // Proxy events to container\n            // Bubble up key events for Edge\n            const proxyEvents = this.player.config.events.concat(['keyup', 'keydown']).join(' ');\n            on.call(this.player, this.player.media, proxyEvents, event => {\n                let { detail = {} } = event;\n\n                // Get error details from media\n                if (event.type === 'error') {\n                    detail = this.player.media.error;\n                }\n\n                triggerEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n            });\n        }\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            if (!wrapper.isAlreadyRegisterEventListener) {\n                wrapper.isAlreadyRegisterEventListener = true;\n                // On click play, pause ore restart\n                on.call(this.player, wrapper, 'click', () => {\n                    // Touch devices will just show controls (if we're hiding controls)\n                    if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\n                        return;\n                    }\n\n                    if (this.player.paused) {\n                        this.player.play();\n                    } else if (this.player.ended) {\n                        this.player.restart();\n                        this.player.play();\n                    } else {\n                        this.player.pause();\n                    }\n                });\n\n                // Disable right click\n                if (this.player.supported.ui && this.player.config.disableContextMenu) {\n                    on.call(\n                        this.player,\n                        this.player.elements.wrapper,\n                        'contextmenu',\n                        event => {\n                            event.preventDefault();\n                        },\n                        false,\n                    );\n                }\n            }\n        }\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Run default and custom handlers\n        const proxy = (event, defaultHandler, customHandlerKey) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n            let returned = true;\n\n            // Execute custom handler\n            if (hasCustomHandler) {\n                returned = customHandler.call(this.player, event);\n            }\n\n            // Only call default handler if not prevented in custom handler\n            if (returned && is.function(defaultHandler)) {\n                defaultHandler.call(this.player, event);\n            }\n        };\n\n        // Trigger custom and default handlers\n        const bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n\n            on.call(\n                this.player,\n                element,\n                type,\n                event => proxy(event, defaultHandler, customHandlerKey),\n                passive && !hasCustomHandler,\n            );\n        };\n\n        // Play/pause toggle\n        Array.from(this.player.elements.buttons.play).forEach(button => {\n            bind(button, 'click', this.player.togglePlay, 'play');\n        });\n\n        // Pause\n        bind(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        bind(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        bind(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        bind(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        bind(this.player.elements.buttons.captions, 'click', () => this.player.toggleCaptions());\n\n        // zoom toggle\n        on(\n            this.player.elements.buttons.zoom,\n            'click',\n            () => {\n                this.player.fullscreen.toggleZoom();\n            },\n            'zoom',\n        );\n\n        // Fullscreen toggle\n        bind(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        bind(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        bind(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu\n        bind(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu\n        bind(this.player.elements.settings.form, 'click', event => {\n            event.stopPropagation();\n\n            // Go back to home tab on click\n            const showHomeTab = () => {\n                const id = `plyr-settings-${this.player.id}-home`;\n                controls.showTab.call(this.player, id);\n            };\n\n            // Settings menu items - use event delegation as items are added/removed\n            if (matches(event.target, this.player.config.selectors.inputs.language)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.currentTrack = Number(event.target.value);\n                        // showHomeTab();\n                    },\n                    'language',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.quality)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.quality = event.target.value;\n                        // showHomeTab();\n                    },\n                    'quality',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.speed)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.speed = parseFloat(event.target.value);\n                        // showHomeTab();\n                    },\n                    'speed',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs['caption-position'])) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.captionPosition = event.target.value;\n                    },\n                    'caption-position',\n                );\n            } else {\n                const tab = event.target;\n                controls.showTab.call(this.player, tab.getAttribute('aria-controls'));\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        bind(this.player.elements.inputs.seek, 'mousedown mousemove', event => {\n            const clientRect = this.player.elements.progress.getBoundingClientRect();\n            const percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        bind(this.player.elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n\n            const code = event.keyCode ? event.keyCode : event.which;\n            const eventType = event.type;\n\n            if ((eventType === 'keydown' || eventType === 'keyup') && (code !== 39 && code !== 37)) {\n                return;\n            }\n            // Was playing before?\n            const play = seek.hasAttribute('play-on-seeked');\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute('play-on-seeked');\n                this.player.play();\n            } else if (!done && this.player.playing) {\n                seek.setAttribute('play-on-seeked', '');\n                this.player.pause();\n            }\n        });\n\n        // Seek\n        bind(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                this.player.currentTime = seekTo / seek.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !is.element(this.player.elements.display.duration)) {\n            bind(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n\n                controls.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        bind(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(this.player, 'input[type=\"range\"]')).forEach(element => {\n                bind(element, 'input', event => controls.updateRangeFill.call(this.player, event.target));\n            });\n        }\n\n        // Seek tooltip\n        bind(this.player.elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(this.player, event),\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mouseenter mouseleave', event => {\n            this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            this.player.elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Focus in/out on controls\n        bind(this.player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = this.player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, event.type === 'focusin');\n\n            // Toggle\n            ui.toggleControls.call(this.player, event.type === 'focusin');\n\n            // If focusin, hide again after delay\n            if (event.type === 'focusin') {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(elements.controls, config.classNames.noTransition, false);\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n                // Hide\n                timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            }\n        });\n\n        // Mouse wheel for volume\n        bind(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n                const step = 1 / 50;\n                let direction = 0;\n\n                // Scroll down (or up on natural) to decrease\n                if (event.deltaY < 0 || event.deltaX > 0) {\n                    if (inverted) {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    } else {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    }\n                }\n\n                // Scroll up (or down on natural) to increase\n                if (event.deltaY > 0 || event.deltaX < 0) {\n                    if (inverted) {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    } else {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    }\n                }\n\n                // Don't break page scrolling at max and min\n                if (\n                    (direction === 1 && this.player.media.volume < 1) ||\n                    (direction === -1 && this.player.media.volume > 0)\n                ) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from './../captions';\nimport controls from './../controls';\nimport ui from './../ui';\nimport { createElement, replaceElement, toggleClass } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport fetch from './../utils/fetch';\nimport is from './../utils/is';\nimport loadScript from './../utils/loadScript';\nimport { format, stripHTML } from './../utils/strings';\nimport { buildUrlParams } from './../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from './../controls';\nimport ui from './../ui';\nimport { dedupe } from './../utils/arrays';\nimport { createElement, replaceElement, toggleClass } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport fetch from './../utils/fetch';\nimport is from './../utils/is';\nimport loadImage from './../utils/loadImage';\nimport loadScript from './../utils/loadScript';\nimport { format, generateId } from './../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    const qualities = {\n        hd2160: 2160,\n        hd1440: 1440,\n        hd1080: 1080,\n        hd720: 720,\n        large: 480,\n        medium: 360,\n        small: 240,\n        tiny: 144,\n    };\n\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\n\n    if (entry) {\n        // Get the match corresponding to the input\n        return entry.find(value => value !== input);\n    }\n\n    return 'default';\n}\n\nfunction mapQualityUnits(levels) {\n    if (is.empty(levels)) {\n        return levels;\n    }\n\n    return dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackQualityChange() {\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            instance.setPlaybackQuality(mapQualityUnit(input));\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(\n                                    player,\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\n                                );\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport { createElement } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport is from './../utils/is';\nimport loadScript from './../utils/loadScript';\nimport { formatTime } from './../utils/time';\nimport { buildUrlParams } from './../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId);\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport captions from './captions';\nimport { providers } from './config/types';\nimport controls from './controls';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement, setAttributes } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        const tracks = Array.from(this.media.querySelectorAll('track'));\n        removeElement(tracks);\n        this.captions.currentTrack = -1;\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // retain old provider and type\n                const prevType = this.type;\n                const prevProvider = this.provider;\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                });\n\n                if (prevType === type && prevProvider === provider && provider === providers.html5) {\n                    /**\n                     * if provider is html5 and setting is same as prev source,\n                     * retain media element (because ios system has limited resource,\n                     * can't create many video resource)\n                     */\n                    setAttributes(this.media, attributes);\n                } else {\n                    this.media = null;\n                    this.media = createElement(tagName, attributes);\n                }\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n                ui.addStylehookToFullscreenContainer.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                    this.media.setAttribute('src', sources[0].src);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // restore video quality\n                const quality = this.storage.get('quality');\n                if (is.number(quality)) {\n                    this.media.quality = quality;\n                }\n\n                let defaultCaption = null;\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                        const defaultTracks = input.tracks.filter(track => track.default);\n                        if (defaultTracks.length > 0 ){\n                            defaultCaption = defaultTracks[0].srclang;\n                        }\n                        captions.update.call(this);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n                captions.setDefault.call(this, defaultCaption);\n                const speed = this.storage.get('speed');\n                if (is.number(speed)) {\n                    this.speed = speed;\n                    controls.updateSetting.call(this, 'speed', speed);\n                }\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","import { setAttributes, toggleClass } from './utils/elements';\n\nconst logo = {\n    setup() {\n        // add custom logo\n        if (this.config.logo && this.config.logo.url) {\n            // build logo container\n            const logoContainer = document.createElement('div');\n            toggleClass(logoContainer, this.config.classNames.logo, true);\n\n            // image put into logo container if link not present\n            let imageContainer = logoContainer;\n\n            if (this.config.logo.link) {\n                // if logo.link setup, put image into a\n                const linkElement = document.createElement('a');\n                setAttributes(linkElement, {\n                    href: this.config.logo.link,\n                });\n                logoContainer.appendChild(linkElement);\n                imageContainer = linkElement;\n            }\n\n            // build logo image\n            const logoElement = document.createElement('img');\n            setAttributes(logoElement, {\n                src: this.config.logo.url,\n            });\n            imageContainer.appendChild(logoElement);\n            this.elements.container.appendChild(logoContainer);\n        }\n    },\n};\n\nexport default logo;\n","import captions from './captions';\nimport controls from './controls';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport { dedupe } from './utils/arrays';\nimport { createElement, emptyElement, getAttributesFromSelector } from './utils/elements';\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nconst hahow = {\n    createControls(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        const topLayer = createElement('div', getAttributesFromSelector(this.config.selectors.controls.layer.topLayer));\n        const bottomLayer = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.layer.bottomLayer),\n        );\n        const bottomLeft = createElement('div', getAttributesFromSelector(this.config.selectors.controls.bottom.left));\n        const bottomRight = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.bottom.right),\n        );\n\n        bottomLayer.appendChild(bottomLeft);\n        bottomLayer.appendChild(bottomRight);\n        container.appendChild(topLayer);\n        container.appendChild(bottomLayer);\n\n        // Rewind button\n        bottomLeft.appendChild(controls.createButton.call(this, 'rewind'));\n\n        // Play/Pause button\n        bottomLeft.appendChild(controls.createButton.call(this, 'play'));\n\n        // Fast forward button\n        bottomLeft.appendChild(controls.createButton.call(this, 'fast-forward'));\n\n        // Progress\n        const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n        // Seek range slider\n        progress.appendChild(\n            controls.createRange.call(this, 'seek', {\n                id: `plyr-seek-${data.id}`,\n            }),\n        );\n\n        // Buffer progress\n        progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n        // TODO: Add loop display indicator\n\n        // Seek tooltip\n        if (this.config.tooltips.seek) {\n            const tooltip = createElement(\n                'span',\n                {\n                    class: this.config.classNames.tooltip,\n                },\n                '00:00',\n            );\n\n            progress.appendChild(tooltip);\n            this.elements.display.seekTooltip = tooltip;\n        }\n\n        this.elements.progress = progress;\n        topLayer.appendChild(this.elements.progress);\n\n        // Media current time display\n        bottomLeft.appendChild(controls.createTime.call(this, 'currentTime'));\n\n        // Media duration display\n        bottomLeft.appendChild(controls.createTime.call(this, 'duration'));\n\n        // Toggle mute button\n        bottomRight.appendChild(controls.createButton.call(this, 'mute'));\n\n        // Volume range control\n        const volume = createElement('div', {\n            class: 'plyr__volume',\n        });\n\n        // Set the attributes\n        const attributes = {\n            max: 1,\n            step: 0.05,\n            value: this.config.volume,\n        };\n\n        // Create the volume range slider\n        volume.appendChild(\n            controls.createRange.call(\n                this,\n                'volume',\n                extend(attributes, {\n                    id: `plyr-volume-${data.id}`,\n                }),\n            ),\n        );\n\n        this.elements.volume = volume;\n\n        bottomRight.appendChild(volume);\n\n        // Settings button / menu\n        const menu = createElement('div', {\n            class: 'plyr__menu',\n            hidden: '',\n        });\n\n        menu.appendChild(\n            controls.createButton.call(this, 'settings', {\n                id: `plyr-settings-toggle-${data.id}`,\n                'aria-haspopup': true,\n                'aria-controls': `plyr-settings-${data.id}`,\n                'aria-expanded': false,\n            }),\n        );\n\n        const form = createElement('form', {\n            class: 'plyr__menu__container',\n            id: `plyr-settings-${data.id}`,\n            hidden: '',\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tablist',\n            tabindex: -1,\n        });\n\n        const inner = createElement('div');\n\n        const home = createElement('div', {\n            id: `plyr-settings-${data.id}-home`,\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tabpanel',\n        });\n\n        // Create the tab list\n        const tabs = createElement('ul', {\n            role: 'tablist',\n        });\n\n        // Build the tabs\n        this.config.settings.forEach(type => {\n            const tab = createElement('li', {\n                role: 'tab',\n                hidden: '',\n            });\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                    id: `plyr-settings-${data.id}-${type}-tab`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-${type}`,\n                    'aria-expanded': false,\n                }),\n                i18n.get(type, this.config),\n            );\n\n            const value = createElement('span', {\n                class: this.config.classNames.menu.value,\n            });\n\n            // Speed contains HTML entities\n            value.innerHTML = data[type];\n\n            button.appendChild(value);\n            tab.appendChild(button);\n            tabs.appendChild(tab);\n\n            this.elements.settings.tabs[type] = tab;\n        });\n\n        home.appendChild(tabs);\n        inner.appendChild(home);\n\n        // Build the panes\n        this.config.settings.forEach(type => {\n            const pane = createElement('div', {\n                id: `plyr-settings-${data.id}-${type}`,\n                class: 'subpanel',\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                role: 'tabpanel',\n                tabindex: -1,\n            });\n\n            const back = createElement(\n                'button',\n                {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-home`,\n                    'aria-expanded': false,\n                },\n                i18n.get(type, this.config),\n            );\n\n            pane.appendChild(back);\n\n            const options = createElement('ul');\n\n            pane.appendChild(options);\n            inner.appendChild(pane);\n\n            this.elements.settings.panes[type] = pane;\n        });\n\n        form.appendChild(inner);\n        menu.appendChild(form);\n        bottomRight.appendChild(menu);\n\n        this.elements.settings.form = form;\n        this.elements.settings.menu = menu;\n\n        bottomRight.appendChild(controls.createButton.call(this, 'zoom'));\n\n        // Toggle fullscreen button\n        bottomRight.appendChild(controls.createButton.call(this, 'fullscreen'));\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            hahow.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        hahow.setSpeedMenu.call(this);\n        hahow.setCaptionsMenu.call(this);\n        hahow.setCaptionsPositionMenu.call(this);\n\n        return container;\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, true);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            controls.createMenuItem.bind(this)({\n                value: -1,\n                checked: !this.captions.toggled,\n                title: i18n.get('noCaptions', this.config),\n                list,\n                type: 'language',\n            });\n            controls.updateSetting.call(this, type, list);\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n};\n\nexport default hahow;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.3.17\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport logo from './logo';\nimport hahow from './hahowCustomControl';\nimport { closest } from './utils/arrays';\nimport { setAttributes, createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                menu: null,\n                panes: {},\n                tabs: {},\n            },\n            captions: null,\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.searchParams.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n        ui.addStylehookToFullscreenContainer.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        logo.setup.call(this);\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN before the media has loaded\n        const duration = (this.media || {}).duration || 0;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 1);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume - (is.number(step) ? step : 1);\n    }\n\n    set fullscreenContainer (container) {\n        if (is.element(container)) {\n            this.config.fullscreenContainer = container;\n            ui.addStylehookToFullscreenContainer.call(this);\n        }\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        } else if (`${quality}` === `${input}`) {\n            this.storage.set({\n                quality,\n            });\n        }\n\n        // Trigger request event\n        triggerEvent.call(this, this.media, 'qualityrequested', false, { quality });\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    set captionPosition(input) {\n        this.captions.position = input;\n        this.storage.set({\n            captionPosition: input,\n        });\n        captions.setPosition.call(this, this.captions.position);\n    }\n\n    get captionPosition() {\n        return this.storage.get('captionPosition') || this.config.captions.position;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n            return !hiding;\n        }\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\nPlyr.hahow = hahow;\nexport default Plyr;\n"]}